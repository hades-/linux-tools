#!/usr/bin/env python2.7
import sys, os, subprocess, glob

######################## FUNCTIONS ########################

# function to check for existance of avconv
def check_avconv():
    DEVNULL = open(os.devnull, 'w')
    try:
        subprocess.call("avconv", stdout=DEVNULL, stderr=DEVNULL)
    except OSError:
        print "Error: Converter is based on avconv but process was not found, install via apt-get."
        sys.exit()

# function to check if file is wma (only checks extension)
def is_wma(filename):
    fs = filename.split(".")
    if fs[1] == "wma":
        return [True, fs[0]]
    return False

# function to convert file from wma to mp3
def convert_wma2mp3(filename, quality, verbose=False):
    print "Converting ", filename

    # strip wma extension if passed
    res = is_wma(filename)
    if len(res) > 1:
        filename_stripped = res[1]
    else:
        return

    # derive output name, skip if it exists already
    o_filename = filename_stripped + ".mp3"
    if os.path.isfile(o_filename):
        print "  File exists, skipping:", o_filename
        return

    # convert w/ avconv, quality 2 (0-9, 0 is best)
    if verbose:
        print '\n'
        subprocess.call(["avconv","-i",filename,"-q:a",quality,o_filename])
        print '\n'
    else:
        DEVNULL = open(os.devnull, 'w')
        subprocess.call(["avconv","-i",filename,"-q:a",quality,o_filename], stdout=DEVNULL, stderr=DEVNULL)


# function for loading files in folder
def find_wmas(directory,quality,verbose=False):
    import glob
    for file in glob.glob( os.path.join(directory,"*.wma") ):
        convert_wma2mp3(file,quality,verbose)

######################## END FUNCTIONS ########################

encoding_help="Variable bitrate encoding\
, LAME Bitrate Overview\n\
lame option Average kbit/s  Bitrate range kbit/s    ffmpeg option\n\
-b 320  320 320 CBR (non VBR) example   -b:a 320k (NB this is 32KB/s, or its max)\n\
-V 0    245 220-260 -q:a 0 (NB this is VBR from 22 to 26 KB/s)\n\
-V 1    225 190-250 -q:a 1\n\
-V 2    190 170-210 -q:a 2\n\
-V 3    175 150-195 -q:a 3\n\
-V 4    165 140-185 -q:a 4\n\
-V 5    130 120-150 -q:a 5\n\
-V 6    115 100-130 -q:a 6\n\
-V 7    100 80-120  -q:a 7\n\
-V 8    85  70-105  -q:a 8\n\
-V 9    65  45-85   -q:a 9\n"

help_chars = ['h','help','?']

# setup arg parser
import argparse
parser = argparse.ArgumentParser(description="Music file converter utility (wma to mp3, based on avconv).")
parser.add_argument("-p","--path",help="Path to file or directory to be converted (split along ':' for multiple paths).")
parser.add_argument("-r","--recursive",help="Recursive conversion of path.", action="store_true")
parser.add_argument("-v","--verbose",help="Verbose mode (displays avconv output).", action="store_true")
parser.add_argument("-q","--quality",help="Quality level from LAME chart (view with '-q?' or '-q help').", default=1)
args = parser.parse_args()

# print encoder quality help if requested
if type(args.quality) != int and args.quality.lower() in help_chars:
    print encoding_help
    sys.exit()

# check pre-requisities
check_avconv()

# split args.path to generate a list
if args.path:
    args.path = args.path.split(":")
    for p in args.path:
        p = p.strip()

        if os.path.exists(p): # check path exists
            if os.path.isdir(p): # process directory
                if args.recursive: # process directory recursively
                    for wlk in os.walk(p):
                        print " Processing directory: ", wlk[0]
                        find_wmas(wlk[0], args.quality, args.verbose)
                else: # process directory non-recursively
                    print " Processing directory: ", p
                    find_wmas(p, args.quality, args.verbose)
            else: # process single wma file
                print " Processing file: ", p
                convert_wma2mp3(p, args.quality, args.verbose)
        else:
            print " Path not found, skipping: ", p
else:
    parser.print_usage()
